Token Usage Dashboard - Guia de Deploy
üéØ Vis√£o Geral das Mudan√ßas
O projeto foi atualizado para suportar:

URLs espec√≠ficas para clientes: Cada cliente acessa apenas seu pr√≥prio dashboard
Dashboard admin: Voc√™ pode ver todos os projetos e gerenciar URLs dos clientes
Ciclos mensais customizados: Cada cliente pode ter um dia espec√≠fico do m√™s para renova√ß√£o
Deploy para servidor: Scripts e configura√ß√µes para produ√ß√£o

üîß Configura√ß√£o dos Clientes
No arquivo backend/app.py, configure seus clientes na vari√°vel CLIENT_CONFIG:
pythonCLIENT_CONFIG = {
    'cliente_empresa_a': {
        'project': 'bot_sejasua',
        'name': 'Empresa A - Bot SejaSua',
        'cycle_day': 5  # Renova√ß√£o dia 5 de cada m√™s
    },
    'cliente_empresa_b': {
        'project': 'bot_model',
        'name': 'Empresa B - Bot Model',
        'cycle_day': 15  # Renova√ß√£o dia 15 de cada m√™s
    },
    'cliente_startup_c': {
        'project': 'bot_assistente',
        'name': 'Startup C - Assistente',
        'cycle_day': 1   # Renova√ß√£o dia 1 de cada m√™s
    }
}
üåê URLs de Acesso
Para Voc√™ (Admin)

Dashboard Admin: https://seudominio.com/admin

Visualiza todos os projetos
Pode alternar entre projetos
Mostra URLs dos clientes para compartilhar



Para os Clientes

Cliente Empresa A: https://seudominio.com/client/cliente_empresa_a
Cliente Empresa B: https://seudominio.com/client/cliente_empresa_b
Cliente Startup C: https://seudominio.com/client/cliente_startup_c


üí° Os clientes s√≥ veem seus pr√≥prios dados, sem op√ß√£o de trocar projetos

üìä Como Funciona o Ciclo Mensal
Exemplo com cycle_day: 5

Per√≠odo atual: De 05/Jan at√© 04/Fev
Pr√≥xima renova√ß√£o: 05/Fev (zera contadores)
Se hoje for 03/Fev: Mostra consumo de 05/Jan at√© hoje
Se hoje for 06/Fev: Mostra consumo de 05/Fev at√© hoje (novo ciclo)

üöÄ Deploy no Servidor
Op√ß√£o 1: Deploy Tradicional

Prepare o servidor:

bash# Instale depend√™ncias no servidor
sudo apt update
sudo apt install python3 python3-venv nodejs npm nginx certbot python3-certbot-nginx

Configure o deploy script:

bash# Edite deploy.sh com suas informa√ß√µes
SERVER_USER="seu_usuario"
SERVER_HOST="seu_servidor.com"
DOMAIN="dashboard.seusite.com"

Execute o deploy:

bashchmod +x deploy.sh
./deploy.sh
Op√ß√£o 2: Deploy com Docker

Configure vari√°veis de ambiente:

bash# Crie arquivo .env na raiz do projeto
LANGSMITH_API_KEY=sua_api_key_aqui
LANGSMITH_ENDPOINT=https://api.smith.langchain.com

Execute com Docker Compose:

bashdocker-compose up -d
üîß Configura√ß√µes Necess√°rias
1. Atualizar URLs da API
No arquivo frontend/src/config.js (criar se n√£o existir):
javascript// Para produ√ß√£o
export const API_BASE_URL = 'https://seudominio.com';

// Para desenvolvimento
// export const API_BASE_URL = 'http://localhost:5000';
Depois atualize os componentes para usar esta configura√ß√£o:
javascriptimport { API_BASE_URL } from '../config';

// Ao inv√©s de:
// fetch('http://localhost:5000/api/...')

// Use:
// fetch(`${API_BASE_URL}/api/...`)
2. Configurar Nginx (se n√£o usar Docker)
nginxserver {
    listen 80;
    server_name dashboard.seusite.com;

    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
3. SSL com Let's Encrypt
bashsudo certbot --nginx -d dashboard.seusite.com
üì± Atualiza√ß√µes no Frontend
Instalar nova depend√™ncia:
bashcd frontend
npm install react-router-dom@^6.26.2
Novos componentes criados:

AdminDashboard.js - Dashboard para admin
ClientDashboard.js - Dashboard para clientes
ClientTokenUsageDashboard.js - Vers√£o espec√≠fica para clientes

üîí Seguran√ßa
Recomenda√ß√µes:

Firewall: Bloqueie acesso direto √† porta 5000
Rate Limiting: Configure no Nginx
Logs: Monitore acessos suspeitos
Backup: Configure backup dos logs do LangSmith

Exemplo de rate limiting no Nginx:
nginxhttp {
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    server {
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            # resto da configura√ß√£o...
        }
    }
}
üìä Monitoramento
Logs do aplicativo:
bash# Logs do sistema (se usando systemd)
sudo journalctl -u token-dashboard -f

# Logs do Docker
docker-compose logs -f token-dashboard

# Logs do Nginx
sudo tail -f /var/log/nginx/access.log
M√©tricas importantes para monitorar:

Uso de CPU/RAM do servidor
N√∫mero de requisi√ß√µes √† API
Tempo de resposta
Erros 500/404

üîÑ Atualiza√ß√µes Futuras
Para atualizar o sistema:

Fa√ßa backup dos dados e configura√ß√µes
Teste localmente as mudan√ßas
Execute deploy novamente
Verifique se tudo est√° funcionando

Comando r√°pido para redeploy:
bash./deploy.sh
‚ùì Troubleshooting
Problema: "Cliente n√£o encontrado"

Verifique se o clientId na URL est√° correto
Confirme se est√° configurado no CLIENT_CONFIG

Problema: "Erro de conex√£o com LangSmith"

Verifique se LANGSMITH_API_KEY est√° configurada
Teste conectividade com a API do LangSmith

Problema: Dashboard n√£o carrega

Verifique logs do backend: sudo journalctl -u token-dashboard -f
Confirme se o Nginx est√° rodando: sudo systemctl status nginx
Teste API diretamente: curl http://localhost:5000/api/health

Problema: Gr√°ficos n√£o aparecem

Verifique console do browser para erros JavaScript
Confirme se dados est√£o sendo retornados pela API
Teste com diferentes per√≠odos

üéâ Resultado Final
Voc√™ ter√°:
‚úÖ Dashboard admin com controle total
‚úÖ URLs espec√≠ficas para cada cliente
‚úÖ Ciclos mensais personalizados
‚úÖ Interface limpa para os clientes
‚úÖ Deploy automatizado para produ√ß√£o
‚úÖ SSL configurado automaticamente
‚úÖ Monitoramento de logs e m√©tricas
üìû Suporte
Se precisar de ajuda com alguma configura√ß√£o espec√≠fica ou encontrar problemas, me informe!